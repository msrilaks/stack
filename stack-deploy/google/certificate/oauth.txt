Production:
https://www.stackitdown.com:8080/login/oauth2/code/google

Dev:
https://localhost:8080/login/oauth2/code/google

Self Signed Cert
openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout stack-ingress.key -out stack-ingress.crt -config req.cnf -sha256


Another way:
openssl genrsa -out test-ingress-1.key 2048
openssl req -new -key test-ingress-1.key -out test-ingress-1.csr \
    -subj "/CN=[FIRST_DOMAIN_NAME]"
openssl x509 -req -days 365 -in test-ingress-1.csr -signkey test-ingress-1.key \
    -out test-ingress-1.crt

Secure SSL:
openssl req -nodes -newkey rsa:2048 -keyout stackitdown.key -out stackitdown.csr -config req.cnf
openssl pkcs12 -export -in ./stackitdown.crt -inkey stackitdown.key -out stackitdown.pfx -name "stack"
_44877DAF902A91AEDBB405BCD90FE747.stackitdown.com -> DDCE9F39034990BA72CC7A171466A176.117A546904FDC4D6A06C8F9EBFE5B272.037b12f8b4.ssl.com

Managed GKE cert:
https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs
gcloud compute addresses create stack-ip-address --global

Setup nginx
https://rahmonov.me/posts/nginx-ingress-controller/

lets encrypt
https://runnable.com/blog/how-to-use-lets-encrypt-on-kubernetes
https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nginx-ingress-with-cert-manager-on-digitalocean-kubernetes
https://www.thomasvitale.com/https-spring-boot-ssl-certificate/

https://cert-manager.io/docs/tutorials/acme/ingress/
kubectl create --edit -f https://netlify.cert-manager.io/docs/tutorials/acme/example/letsencrypt2.yaml


https://cert-manager.io/docs/installation/kubernetes/
kubectl create namespace cert-manager

https://medium.com/google-cloud/installing-helm-in-google-kubernetes-engine-7f07f43c536


